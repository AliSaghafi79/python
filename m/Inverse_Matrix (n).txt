#                    Ali Saghafi                     #

#                  ( python )                           #
########################################################
# Inverse Matrix (n × n):
#######################################################

import numpy as np

n = int(input('Enter the number of rows and columns :  ' ))

def Inverse_Matrix(rows,cols):

    mat=[]

    for i in range(rows):

        temp=[]

        for j in range(cols):

            temp.append(int(input("row ({}) , column ({})  :  ".format(i,j)  )))

        mat.append(temp)

    return mat

matrix=Inverse_Matrix(n,n)

print(" ")

print("Matrix ({}×{}) = ".format(n,n))

for row in matrix :
    print(row)

print(" ")


Inverse_Matrix = np.linalg.inv(matrix)

print("Inverse Matrix  = ")


print(Inverse_Matrix)

#####################################################################################

# Sample outPut : ( safhe 32 jozve , file 10 )


	Enter the number of rows and columns :  3

	row (0) , column (0)  :  1
	row (0) , column (1)  :  0
	row (0) , column (2)  :  2
	row (1) , column (0)  :  2
	row (1) , column (1)  :  -1
	row (1) , column (2)  :  3
	row (2) , column (0)  :  4
	row (2) , column (1)  :  1
	row (2) , column (2)  :  8
 
	Matrix (3×3) = 
	[1, 0, 2]
	[2, -1, 3]
	[4, 1, 8]
 
	Inverse Matrix  = 
	[[-11.   2.   2.]
	 [ -4.  -0.   1.]
	 [  6.  -1.  -1.]]

	Process finished with exit code 0



































